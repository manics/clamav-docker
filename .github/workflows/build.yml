# https://docs.github.com/en/actions/guides/publishing-docker-images
name: Build and publish container image

on:
  push:
  pull_request:
  # schedule:
  #   # Run daily
  #   - cron: '36 4 * * *'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.repository }}
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build_and_push:
    name: Build image, push to GitHub registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker tags for base image
        id: meta-base
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base

      - name: Docker tags for updates image
        id: meta-updates
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push base image on tags only
        uses: docker/build-push-action@v6
        with:
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          context: "{{defaultContext}}:base"
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}

      - name: Build and push updated image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base:latest
            CLAMAV_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          context: "{{defaultContext}}:update"
          tags: ${{ steps.meta-updates.outputs.tags }}
          labels: ${{ steps.meta-updates.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}
